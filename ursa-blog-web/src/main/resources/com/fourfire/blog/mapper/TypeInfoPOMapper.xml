<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fourfire.blog.mapper.TypeInfoPOMapper" >
  <resultMap id="BaseResultMap" type="com.fourfire.blog.po.TypeInfoPO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="icon_url" property="iconUrl" jdbcType="VARCHAR" />
    <result column="article_count" property="articleCount" jdbcType="INTEGER" />
    <result column="create_gmt_date" property="createGmtDate" jdbcType="TIMESTAMP" />
    <result column="modify_gmt_date" property="modifyGmtDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, description, icon_url, article_count, create_gmt_date, modify_gmt_date 
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="int" >
    select 
    <include refid="Base_Column_List" />
    from blog_type_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="int" >
    delete from blog_type_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fourfire.blog.po.TypeInfoPO" useGeneratedKeys="true" keyProperty="id" >
    insert into blog_type_info (name, description, icon_url, article_count, create_gmt_date, modify_gmt_date 
      )
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{iconUrl,jdbcType=VARCHAR}, 
    	#{articleCount,jdbcType=INTEGER}, #{createGmtDate,jdbcType=TIMESTAMP}, #{modifyGmtDate,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <update id="addArticleCountInType">
  	UPDATE blog_type_info 
  	SET 
  		article_count = (article_count + #{num, jdbcType=INTEGER})
  	<where>
  		id = #{typeId, jdbcType=INTEGER}
  	</where>
  </update>
	
	<select id="pageQuery" resultMap="BaseResultMap" parameterType="com.fourfire.blog.query.TypeInfoPageQuery">
  	SELECT 
  	<include refid="Base_Column_List"/> 
  	FROM blog_type_info 
  	<where>
  		1=1 
  		<if test="orderByColumn != null and orderByColumn != ''">
  			ORDER BY ${orderByColumn} 
  		</if>
  		<if test="pageNo > 0 and pageSize > 0">
  			LIMIT #{startRow}, #{pageSize}
  		</if>
  	</where>
  </select>
</mapper>